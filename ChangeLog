Notable changes of the pelet library
====================================

Current Version: 2.0

version 2.0
===========
Change 1:
The variable observer now gets two items; a variable and an expression.  The observer method signature has changed
from

    VariableFound(const UnicodeString& namespaceName, const UnicodeString& className, const UnicodeString& methodName, 
	  const pelet::SymbolClass& symbol, const UnicodeString& comment);

to

    VariableFound(const UnicodeString& namespaceName, const UnicodeString& className, const UnicodeString& methodName, 
	    const pelet::VariableClass& variable, const pelet::ExpressionClass& expression, const UnicodeString& comment);

The previous SymbolClass was not capable of representing both sides of an assignment expression in a sane manner. 

The new classes (VariableClass and ExpressionClass) make it possible for users of the library to figure out any
hard-coded array keys or assigned array keys. For example, a user is now able to inspect a file of PHP
source code and list all array keys that are used in a file.

Change 2:
The way to acquire the starting and ending positions of method / function bodies has changed from

    class ClassMemberObserverClass { 

        // ....
 
        virtual void MethodEnd(const UnicodeString& namespaceName, const UnicodeString& className, 
            const UnicodeString& methodName, int pos) { }
        
        // ...
    }

    class FunctionObserverClass { 

        //...

        virtual void FunctionEnd(const UnicodeString& namespaceName, const UnicodeString& functionName, int pos) { }

        //...
    }

to 

    class ClassMemberObserverClass { 

        // ....
 
        virtual void MethodScope(const UnicodeString& namespaceName, const UnicodeString& className, 
            const UnicodeString& methodName, int startingPos, int endingPos) { }
        
        // ...
    }

    class FunctionObserverClass { 

        //...

        virtual void FunctionScope(const UnicodeString& namespaceName, const UnicodeString& functionName, int startingPos, int endingPos) { }

        //...
    }
	
This was done to make it easier to know where the function body begins and ends

Because  of these changes; the Observers will only get notified when a file has been successfully parsed.

Change 3:
The way to acquire the starting and ending positions of method / function bodies has changed from

    class ClassObserverClass { 

        // ....
 
        virtual void NamespaceDeclarationFound(const UnicodeString& namespaceName) { }
        
        // ...
    }

to 

    class ClassObserverClass { 

        // ....
 
        virtual void NamespaceDeclarationFound(const UnicodeString& namespaceName, int startingPos) { }
        
        // ...
    }

This was done to make it easier to know where the namespace body begins and ends


version 1.0
============
Initial version; full PHP 5.3 and PHP 5.4 support
